version: 2
jobs:
  build:
    working_directory: /qmk_firmware
    docker:
      - image: docker:18.06.1-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/qmk_firmware.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/qmk_firmware.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=nyushi/qmk_firmware -t nyushi/qmk_firmware .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/qmk_firmware.tar nyushi/qmk_firmware
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/qmk_firmware.tar
      - run:
          name: Docker Login
          command: docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
      - run:
          name: Push image to registory
          command: docker push nyushi/qmk_firmware
      - run:
          name: Build firmware
          command: docker run --name qmk_firmware -it -w /qmk nyushi/qmk_firmware sh -c "git clone --depth 1 --single-branch --branch $CIRCLE_BRANCH https://github.com/nyushi/qmk_firmware && cd qmk_firmware && make fortitude60_nyushi/rev1:default"
      - run:
          name: Copy firmware
          command: docker cp qmk_firmware:/qmk/qmk_firmware/fortitude60_nyushi_rev1_default.hex /tmp/workspace
      - run: mkdir -p /tmp/workspace
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - fortitude60_nyushi_rev1_default.hex
  publish-github-release:
    docker:
      - image: circleci/golang
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete -prerelease latest /tmp/workspace
workflows:
  version: 2
  workflow:
    jobs:
    - build
    - publish-github-release:
        requires:
          - build
